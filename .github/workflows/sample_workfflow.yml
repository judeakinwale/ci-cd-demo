name: Build and Deploy

on:
  push:
    branches: 
      - "main"
      - "ci"

  pull_request:
    branches: 
      - "main"
      - "ci"

env:
  IMAGE_NAME: ci_cd_demo

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test --if-present

      - name: Build artifact
        run: npm run build --if-present

      - name: Build application artifact
        uses: actions/upload-artifact@v3
        with:
          name: ci-cd-artifact
          path: .

      # For Setting Up Docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # For Setting Up Docker
      
      # Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: judeakinwale/ci-cd-demo:latest
      # Docker Hub

      # For Azure Container Registry
      - name: Login to Azure Container Registry using Docker
        run: docker login ${{ secrets.REGISTRY_LOGIN_SERVER }} --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
        
      - name: Tag the Docker Image
        run: docker tag $IMAGE_NAME ${{ secrets.REGISTRY_LOGIN_SERVER }}/$IMAGE_NAME
        
      - name: Push the Docker Image to Azure Container Registry
        run: docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/$IMAGE_NAME
      # For Azure Container Registry
      


